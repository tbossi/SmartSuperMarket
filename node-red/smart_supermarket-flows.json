[
  {
    "id": "11b01065.87c36",
    "type": "tab",
    "label": "Shelves",
    "disabled": false,
    "info": "Tutti i flussi riguardanti gli scaffali/banconi:\n\n1) Gestione temperature banco frigo\n2) Gestione prodotti presenti sugli scaffali"
  },
  {
    "id": "175c22d2.0ef64d",
    "type": "tab",
    "label": "ManageGui",
    "disabled": false,
    "info": ""
  },
  {
    "id": "186b7a65.42ec46",
    "type": "tab",
    "label": "Carts",
    "disabled": false,
    "info": ""
  },
  {
    "id": "75994a9b.4846ac",
    "type": "subflow",
    "name": "TCP SET Raw value",
    "info": "",
    "in": [
      {
        "x": 40,
        "y": 80,
        "wires": [
          {
            "id": "8f0eb1ed.19dea"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 760,
        "y": 80,
        "wires": [
          {
            "id": "f7b77fa8.c2f88",
            "port": 0
          }
        ]
      }
    ]
  },
  {
    "id": "9764201b.6e44f8",
    "type": "subflow",
    "name": "TCP GET Raw value",
    "info": "",
    "in": [
      {
        "x": 40,
        "y": 80,
        "wires": [
          {
            "id": "bb3021cf.9d2418"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 760,
        "y": 80,
        "wires": [
          {
            "id": "e662febb.30f3f8",
            "port": 0
          }
        ]
      }
    ]
  },
  {
    "id": "1c278488.7d6afb",
    "type": "subflow",
    "name": "Mongo - Change product availability",
    "info": "",
    "in": [
      {
        "x": 60,
        "y": 100,
        "wires": [
          {
            "id": "bf7f4322.4baca"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 960,
        "y": 200,
        "wires": [
          {
            "id": "6035985e.0b62e",
            "port": 0
          }
        ]
      }
    ]
  },
  {
    "id": "821fa547.1b5ce8",
    "type": "subflow",
    "name": "Mongo get market map",
    "info": "",
    "in": [
      {
        "x": 80,
        "y": 70,
        "wires": [
          {
            "id": "92218ff1.234658"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 640,
        "y": 70,
        "wires": [
          {
            "id": "36f1a4d5.84703c",
            "port": 0
          }
        ]
      }
    ]
  },
  {
    "id": "ca9d5af1.bc0ea8",
    "type": "subflow",
    "name": "Mongo get all product",
    "info": "",
    "in": [
      {
        "x": 40,
        "y": 20,
        "wires": [
          {
            "id": "36cb8568.df137a"
          }
        ]
      }
    ],
    "out": [
      {
        "x": 660,
        "y": 20,
        "wires": [
          {
            "id": "97983c7e.ee6eb8",
            "port": 0
          }
        ]
      }
    ]
  },
  {
    "id": "dcdbb1c1.7b8b3",
    "type": "ui_base",
    "theme": {
      "name": "theme-light",
      "lightTheme": {
        "default": "#0094CE",
        "baseColor": "#0094CE",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": true,
        "reset": false
      },
      "darkTheme": {
        "default": "#097479",
        "baseColor": "#097479",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": false
      },
      "customTheme": {
        "name": "Untitled Theme 1",
        "default": "#4B7930",
        "baseColor": "#4B7930",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "reset": false
      },
      "themeState": {
        "base-color": {
          "default": "#0094CE",
          "value": "#0094CE",
          "edited": false
        },
        "page-titlebar-backgroundColor": {
          "value": "#0094CE",
          "edited": false
        },
        "page-backgroundColor": {
          "value": "#fafafa",
          "edited": false
        },
        "page-sidebar-backgroundColor": {
          "value": "#ffffff",
          "edited": false
        },
        "group-textColor": {
          "value": "#1bbfff",
          "edited": false
        },
        "group-borderColor": {
          "value": "#ffffff",
          "edited": false
        },
        "group-backgroundColor": {
          "value": "#ffffff",
          "edited": false
        },
        "widget-textColor": {
          "value": "#111111",
          "edited": false
        },
        "widget-backgroundColor": {
          "value": "#0094ce",
          "edited": false
        },
        "widget-borderColor": {
          "value": "#ffffff",
          "edited": false
        },
        "base-font": {
          "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
        }
      }
    },
    "site": {
      "name": "Smart Supermarket Dashboard",
      "hideToolbar": "false",
      "allowSwipe": "false",
      "dateFormat": "DD/MM/YYYY",
      "sizes": {
        "sx": 48,
        "sy": 48,
        "gx": 6,
        "gy": 6,
        "cx": 6,
        "cy": 6,
        "px": 0,
        "py": 0
      }
    }
  },
  {
    "id": "cc40c5fa.c756c8",
    "type": "ui_tab",
    "z": "",
    "name": "Shelves",
    "icon": "dashboard"
  },
  {
    "id": "fd9e676c.85fd6",
    "type": "ui_group",
    "z": "",
    "name": "Temperature",
    "tab": "cc40c5fa.c756c8",
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "d8a581dc.b0cfa8",
    "type": "mongodb2",
    "z": "",
    "uri": "mongodb://localhost/smart_supermarket",
    "name": "Local MongoDB",
    "options": "",
    "parallelism": "-1"
  },
  {
    "id": "6c5f366c.b6c0f8",
    "type": "mqtt-broker",
    "z": "",
    "broker": "localhost",
    "port": "1883",
    "clientid": "",
    "usetls": false,
    "compatmode": true,
    "keepalive": "60",
    "cleansession": true,
    "willTopic": "",
    "willQos": "0",
    "willPayload": "",
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": ""
  },
  {
    "id": "366b0688.9c8872",
    "type": "ui_tab",
    "z": "",
    "name": "Carts",
    "icon": "dashboard"
  },
  {
    "id": "9d4a3a62.d7ce4",
    "type": "ui_group",
    "z": "",
    "name": "Carts positions",
    "tab": "366b0688.9c8872",
    "disp": true,
    "width": "14",
    "collapse": false
  },
  {
    "id": "49992fa3.4072f",
    "type": "inject",
    "z": "11b01065.87c36",
    "name": " temperature change crontab",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "30",
    "crontab": "",
    "once": false,
    "x": 180,
    "y": 120,
    "wires": [
      [
        "56acca35.ed11bc"
      ]
    ]
  },
  {
    "id": "56acca35.ed11bc",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "generate random temperature",
    "func": "function getRandomInt(min, max) {\n    return (Math.random() * (max - min + 1) + min).toFixed(1);\n}\n\nmsg = {};\nmsg.device = \"shelf\";\nmsg.deviceId = \"S1_Temp\";\nmsg.value = getRandomInt(0.5, 3.5);\nmsg.payload = `Forced change temperature to ${msg.value}`;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 470,
    "y": 120,
    "wires": [
      [
        "97546f0b.21e3a"
      ]
    ]
  },
  {
    "id": "9e926b17.bf9b5",
    "type": "tcp request",
    "z": "75994a9b.4846ac",
    "server": "localhost",
    "port": "",
    "out": "time",
    "splitc": "0",
    "name": "tcp set request",
    "x": 340,
    "y": 80,
    "wires": [
      [
        "f7b77fa8.c2f88"
      ]
    ]
  },
  {
    "id": "8f0eb1ed.19dea",
    "type": "function",
    "z": "75994a9b.4846ac",
    "name": "create request",
    "func": "msg.payload = `SET ${msg.deviceId} ${msg.value}`;\n\nswitch(msg.device) {\n    case \"shelf\" : msg.port = 9090; break;\n    case \"cart\" : msg.port = 9091; break;\n    default: msg.port = 0;\n}\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 160,
    "y": 80,
    "wires": [
      [
        "9e926b17.bf9b5"
      ]
    ]
  },
  {
    "id": "97546f0b.21e3a",
    "type": "subflow:75994a9b.4846ac",
    "z": "11b01065.87c36",
    "name": "",
    "x": 760,
    "y": 120,
    "wires": [
      [
        "e1f6b66.98aff48"
      ]
    ]
  },
  {
    "id": "2db8164c.4d9fda",
    "type": "inject",
    "z": "11b01065.87c36",
    "name": "thermostat frequence",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "1",
    "crontab": "",
    "once": false,
    "x": 160,
    "y": 180,
    "wires": [
      [
        "f00043a8.e5bba"
      ]
    ]
  },
  {
    "id": "8373c38a.1aff38",
    "type": "tcp request",
    "z": "9764201b.6e44f8",
    "server": "localhost",
    "port": "",
    "out": "time",
    "splitc": "0",
    "name": "tcp get request",
    "x": 340,
    "y": 80,
    "wires": [
      [
        "e662febb.30f3f8"
      ]
    ]
  },
  {
    "id": "bb3021cf.9d2418",
    "type": "function",
    "z": "9764201b.6e44f8",
    "name": "create request",
    "func": "msg.payload = `GET ${msg.deviceId}`;\n\nswitch(msg.device) {\n    case \"shelf\" : msg.port = 9090; break;\n    case \"cart\" : msg.port = 9091; break;\n    default: msg.port = 0;\n}\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 160,
    "y": 80,
    "wires": [
      [
        "8373c38a.1aff38"
      ]
    ]
  },
  {
    "id": "8b9591cd.db2128",
    "type": "subflow:9764201b.6e44f8",
    "z": "11b01065.87c36",
    "name": "",
    "x": 380,
    "y": 230,
    "wires": [
      [
        "a5a8da7d.d083a"
      ]
    ]
  },
  {
    "id": "f00043a8.e5bba",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "generate get request",
    "func": "msg = {};\nmsg.device = \"shelf\";\nmsg.deviceId = \"S1_Temp\";\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 160,
    "y": 230,
    "wires": [
      [
        "8b9591cd.db2128"
      ]
    ]
  },
  {
    "id": "a5a8da7d.d083a",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "adjust temperature",
    "func": "function getAdjustment(preferred, actual) {\n    var adj = 0.0;\n    if (actual < preferred) {\n      adj = 0.1;\n    } else if (actual > preferred) {\n      adj = -0.1;\n    }\n    return (actual + adj).toFixed(1);\n}\nvar value = parseFloat(msg.value);\nmsg = {};\nmsg.device = \"shelf\";\nmsg.deviceId = \"S1_Temp\";\nmsg.value = getAdjustment(2, value);\nmsg.payload = `Adjust temperature to ${msg.value}`;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 590,
    "y": 230,
    "wires": [
      [
        "97546f0b.21e3a"
      ]
    ]
  },
  {
    "id": "e662febb.30f3f8",
    "type": "function",
    "z": "9764201b.6e44f8",
    "name": "output",
    "func": "msg.payload = `${msg.payload}`;\narray = msg.payload.split(\" \");\n\nmsg.responseStatus = array[0];\nif (msg.responseStatus === \"ERROR\") {\n    msg.errorCode = parseInt(array[1]);\n    msg.errorMessage = array.slice(2).join(\" \");\n    node.error(\"Error\", msg);\n}\n\nif (msg.responseStatus === \"OK\") {\n    msg.deviceId = array[1];\n    msg.value = array[2];\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 510,
    "y": 80,
    "wires": [
      []
    ]
  },
  {
    "id": "f7b77fa8.c2f88",
    "type": "function",
    "z": "75994a9b.4846ac",
    "name": "output",
    "func": "msg.payload = `${msg.payload}`;\narray = msg.payload.split(\" \");\n\nmsg.responseStatus = array[0];\nif (msg.responseStatus === \"ERROR\") {\n    msg.errorCode = parseInt(array[1]);\n    msg.errorMessage = array.slice(2).join(\" \");\n    node.error(\"Error\", msg);\n}\n\nif (msg.responseStatus === \"OK\") {\n    msg.deviceId = array[1];\n    msg.value = array[2];\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 510,
    "y": 80,
    "wires": [
      []
    ]
  },
  {
    "id": "9aa1207c.92a858",
    "type": "catch",
    "z": "75994a9b.4846ac",
    "name": "Catch output errors",
    "scope": [
      "f7b77fa8.c2f88"
    ],
    "x": 550,
    "y": 140,
    "wires": [
      [
        "4d6e7492.fac554"
      ]
    ]
  },
  {
    "id": "4d6e7492.fac554",
    "type": "debug",
    "z": "75994a9b.4846ac",
    "name": "Show errors",
    "active": true,
    "console": "true",
    "complete": "true",
    "x": 820,
    "y": 140,
    "wires": []
  },
  {
    "id": "993da07e.59b0e8",
    "type": "catch",
    "z": "9764201b.6e44f8",
    "name": "Catch output errors",
    "scope": [
      "e662febb.30f3f8"
    ],
    "x": 550,
    "y": 140,
    "wires": [
      [
        "f0f56451.44e098"
      ]
    ]
  },
  {
    "id": "f0f56451.44e098",
    "type": "debug",
    "z": "9764201b.6e44f8",
    "name": "Show errors",
    "active": true,
    "console": "true",
    "complete": "true",
    "x": 820,
    "y": 140,
    "wires": []
  },
  {
    "id": "68ddd92.8244b28",
    "type": "ui_chart",
    "z": "11b01065.87c36",
    "name": "",
    "group": "fd9e676c.85fd6",
    "order": 0,
    "width": "12",
    "height": "6",
    "label": "chart",
    "chartType": "line",
    "legend": "false",
    "xformat": "HH:mm:ss",
    "interpolate": "linear",
    "nodata": "",
    "dot": false,
    "ymin": "-1",
    "ymax": "6",
    "removeOlder": "5",
    "removeOlderPoints": "",
    "removeOlderUnit": "60",
    "cutout": 0,
    "useOneColor": false,
    "colors": [
      "#1f77b4",
      "#aec7e8",
      "#ff7f0e",
      "#2ca02c",
      "#98df8a",
      "#d62728",
      "#ff9896",
      "#9467bd",
      "#c5b0d5"
    ],
    "useOldStyle": false,
    "x": 960,
    "y": 230,
    "wires": [
      [],
      []
    ]
  },
  {
    "id": "e1f6b66.98aff48",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "Convert result value",
    "func": "var value = parseFloat(msg.value);\nmsg = {};\nmsg.payload = value;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 850,
    "y": 180,
    "wires": [
      [
        "68ddd92.8244b28"
      ]
    ]
  },
  {
    "id": "159861f5.55a226",
    "type": "comment",
    "z": "11b01065.87c36",
    "name": "Temperature management",
    "info": "",
    "x": 130,
    "y": 60,
    "wires": []
  },
  {
    "id": "2881b278.ca7586",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "generate get removed request",
    "func": "var index = context.get(\"deviceIndex\")||0;\nindex = (index % 5) + 1;\ncontext.set(\"deviceIndex\", index);\n\nmsg = {};\nmsg.device = \"shelf\";\nmsg.deviceId = `S${index}_Rem`;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 580,
    "y": 480,
    "wires": [
      [
        "bcff46a7.06c658"
      ]
    ]
  },
  {
    "id": "7c9fb129.f87b9",
    "type": "comment",
    "z": "11b01065.87c36",
    "name": "Products in shelves management",
    "info": "",
    "x": 160,
    "y": 350,
    "wires": []
  },
  {
    "id": "8275e4b6.c8e3d",
    "type": "mongodb2 in",
    "z": "1c278488.7d6afb",
    "service": "_ext_",
    "configNode": "d8a581dc.b0cfa8",
    "name": "Shelves products collection",
    "collection": "products",
    "operation": "",
    "x": 460,
    "y": 100,
    "wires": [
      [
        "45f52ab9.46c1c4"
      ]
    ]
  },
  {
    "id": "6035985e.0b62e",
    "type": "function",
    "z": "1c278488.7d6afb",
    "name": "format result",
    "func": "var deviceId = msg.shelf;\nvar value = msg.value;\nvar availability = msg.amount;\n\nmsg = {};\nmsg.deviceId = deviceId;\nmsg.value = value;\nmsg.availability = availability;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 850,
    "y": 200,
    "wires": [
      []
    ]
  },
  {
    "id": "97df9e3d.1f581",
    "type": "inject",
    "z": "11b01065.87c36",
    "name": "Check shelf frequence",
    "topic": "",
    "payload": "true",
    "payloadType": "bool",
    "repeat": "1",
    "crontab": "",
    "once": false,
    "x": 160,
    "y": 440,
    "wires": [
      [
        "d9086e.221b379",
        "2881b278.ca7586"
      ]
    ]
  },
  {
    "id": "b6f3b481.63c228",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "generate get added request",
    "func": "var index = context.get(\"deviceIndex\")||0;\nindex = (index % 5) + 1;\ncontext.set(\"deviceIndex\", index);\n\nmsg = {};\nmsg.device = \"shelf\";\nmsg.deviceId = `S${index}_Add`;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 590,
    "y": 400,
    "wires": [
      [
        "bcff46a7.06c658"
      ]
    ]
  },
  {
    "id": "bcff46a7.06c658",
    "type": "subflow:9764201b.6e44f8",
    "z": "11b01065.87c36",
    "name": "",
    "x": 870,
    "y": 440,
    "wires": [
      [
        "4963073a.67a6b"
      ]
    ]
  },
  {
    "id": "4963073a.67a6b",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "Continue only if a product has been added or removed",
    "func": "msg.value = parseInt(msg.value);\n\nif (msg.value >= 0) {\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 280,
    "y": 620,
    "wires": [
      [
        "58731525.20ee64",
        "1419e0e3.ef14c7"
      ]
    ]
  },
  {
    "id": "58731525.20ee64",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "reset value",
    "func": "msg.value = -1;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 700,
    "y": 620,
    "wires": [
      [
        "2384c3ba.cb34dc"
      ]
    ]
  },
  {
    "id": "2384c3ba.cb34dc",
    "type": "subflow:75994a9b.4846ac",
    "z": "11b01065.87c36",
    "name": "",
    "x": 900,
    "y": 620,
    "wires": [
      []
    ]
  },
  {
    "id": "5dc37461.93b504",
    "type": "subflow:1c278488.7d6afb",
    "z": "11b01065.87c36",
    "name": "",
    "x": 470,
    "y": 690,
    "wires": [
      [
        "9fb89805.ae494"
      ]
    ]
  },
  {
    "id": "1419e0e3.ef14c7",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "generate operation",
    "func": "if (msg.deviceId.indexOf(\"_Add\") >= 0) {\n    msg.shelf = msg.deviceId.replace(\"_Add\",\"\");\n    msg.amount = +1;\n    return msg;\n}\n\nif (msg.deviceId.indexOf(\"_Rem\") >= 0) {\n    msg.shelf = msg.deviceId.replace(\"_Rem\",\"\");\n    msg.amount = -1;\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 200,
    "y": 690,
    "wires": [
      [
        "5dc37461.93b504"
      ]
    ]
  },
  {
    "id": "bf7f4322.4baca",
    "type": "function",
    "z": "1c278488.7d6afb",
    "name": "find product availability",
    "func": "msg.operation = \"findOne\"\nmsg.payload = [\n    {\n        index : msg.value\n    }, {\n        _id : 0,\n        availability : 1\n    }\n]  \nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 210,
    "y": 100,
    "wires": [
      [
        "8275e4b6.c8e3d"
      ]
    ]
  },
  {
    "id": "45f52ab9.46c1c4",
    "type": "function",
    "z": "1c278488.7d6afb",
    "name": "generate updated amount",
    "func": "var availability = msg.payload.availability;\nvar oldAmount = availability.filter(a => a.shelf === msg.shelf)[0];\n\nmsg.action = oldAmount === undefined;\nmsg.amount = msg.amount +\n            (msg.action ? 0 : oldAmount.value);\n\nif (msg.amount < 0) {\n    node.error(`Invalid amount ${msg.amount}`);\n} else {\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 720,
    "y": 100,
    "wires": [
      [
        "b2d66fda.e8d138"
      ]
    ]
  },
  {
    "id": "56536d0c.a0017c",
    "type": "function",
    "z": "1c278488.7d6afb",
    "name": "update product availability",
    "func": "msg.operation = \"updateOne\"\nmsg.payload = [\n    {\n        index : msg.value,\n        availability : {\n            $elemMatch : {shelf : msg.shelf}\n        }\n    }, {\n        $set: {\n            \"availability.$.value\" : msg.amount\n        }\n    }\n]  \nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 360,
    "y": 220,
    "wires": [
      [
        "c69854e0.e0749"
      ]
    ]
  },
  {
    "id": "c69854e0.e0749",
    "type": "mongodb2 in",
    "z": "1c278488.7d6afb",
    "service": "_ext_",
    "configNode": "d8a581dc.b0cfa8",
    "name": "Shelves products collection",
    "collection": "products",
    "operation": "",
    "x": 640,
    "y": 200,
    "wires": [
      [
        "6035985e.0b62e"
      ]
    ]
  },
  {
    "id": "b2d66fda.e8d138",
    "type": "switch",
    "z": "1c278488.7d6afb",
    "name": "",
    "property": "action",
    "propertyType": "msg",
    "rules": [
      {
        "t": "true"
      },
      {
        "t": "false"
      }
    ],
    "checkall": "true",
    "outputs": 2,
    "x": 150,
    "y": 200,
    "wires": [
      [
        "38280046.2f13c8"
      ],
      [
        "56536d0c.a0017c"
      ]
    ]
  },
  {
    "id": "38280046.2f13c8",
    "type": "function",
    "z": "1c278488.7d6afb",
    "name": "insert product availability",
    "func": "msg.operation = \"updateOne\"\nmsg.payload = [\n    {\n        index : msg.value\n    }, {\n        $push: {\n            availability : {\n                shelf : msg.shelf,\n                value : msg.amount\n            }\n        }\n    }\n]  \nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 350,
    "y": 180,
    "wires": [
      [
        "c69854e0.e0749"
      ]
    ]
  },
  {
    "id": "99595bd4.afda88",
    "type": "catch",
    "z": "1c278488.7d6afb",
    "name": "Invalid amount",
    "scope": [
      "45f52ab9.46c1c4"
    ],
    "x": 680,
    "y": 40,
    "wires": [
      [
        "fe627179.fd8d98"
      ]
    ]
  },
  {
    "id": "fe627179.fd8d98",
    "type": "debug",
    "z": "1c278488.7d6afb",
    "name": "",
    "active": true,
    "console": "false",
    "complete": "true",
    "x": 870,
    "y": 40,
    "wires": []
  },
  {
    "id": "d9086e.221b379",
    "type": "delay",
    "z": "11b01065.87c36",
    "name": "",
    "pauseType": "delay",
    "timeout": "500",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 380,
    "y": 400,
    "wires": [
      [
        "b6f3b481.63c228"
      ]
    ]
  },
  {
    "id": "dbeb271b.500e88",
    "type": "mqtt out",
    "z": "11b01065.87c36",
    "name": "publish availability",
    "topic": "",
    "qos": "1",
    "retain": "true",
    "broker": "6c5f366c.b6c0f8",
    "x": 910,
    "y": 690,
    "wires": []
  },
  {
    "id": "9fb89805.ae494",
    "type": "function",
    "z": "11b01065.87c36",
    "name": "Create topic",
    "func": "msg.topic = `supermarket/${msg.value}/availability/${msg.deviceId}`;\nmsg.payload = {\n    product : msg.value,\n    shelf : msg.deviceId,\n    availability : msg.availability\n};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 720,
    "y": 690,
    "wires": [
      [
        "dbeb271b.500e88"
      ]
    ]
  },
  {
    "id": "14e15984.8bc376",
    "type": "http in",
    "z": "175c22d2.0ef64d",
    "name": "Manage Form",
    "url": "/managesupermarket",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 70,
    "y": 40,
    "wires": [
      [
        "73a34e6c.d68dd"
      ]
    ]
  },
  {
    "id": "c4a8c423.4be0b8",
    "type": "http response",
    "z": "175c22d2.0ef64d",
    "name": "HTTP response",
    "statusCode": "",
    "headers": {},
    "x": 740,
    "y": 120,
    "wires": []
  },
  {
    "id": "7c89b293.a65094",
    "type": "http response",
    "z": "175c22d2.0ef64d",
    "name": "HTTP response",
    "statusCode": "",
    "headers": {},
    "x": 660,
    "y": 300,
    "wires": []
  },
  {
    "id": "62cffaa8.98178c",
    "type": "function",
    "z": "175c22d2.0ef64d",
    "name": "Add ajax Url",
    "func": "msg.url = \"api/managesupermarket\";\nmsg.products = msg.payload;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 450,
    "y": 40,
    "wires": [
      [
        "894cdc9b.6c91c8"
      ]
    ]
  },
  {
    "id": "894cdc9b.6c91c8",
    "type": "template",
    "z": "175c22d2.0ef64d",
    "name": "js",
    "field": "payload.script",
    "fieldType": "msg",
    "format": "javascript",
    "syntax": "plain",
    "template": "$(document).ready(function(e) {\n    $(\"form[ajax=true]\").submit(function(e) {\n        e.preventDefault(); //disativa azioni di default del bottone\n        var form_data = $(this).serialize(); //crea un json con i dati della form\n        var form_url = $(this).attr(\"action\"); //legge il parametro action\n        var form_method = $(this).attr(\"method\").toUpperCase(); //legge il parametro methos\n        $.ajax({\n            url: form_url,\n            type: form_method,\n            data: form_data,\n            cache: false,\n            success: function(returnhtml){\n                $(\"#result\").html(returnhtml);\n                }\n        });\n    });\n    \n    \n    \n    \n// Search price AREA\n    var jobCount = $('#list .in').length;\n  $('.list-count').text(jobCount + ' items');\n    \n  \n  $(\"#search-text\").keyup(function () {  \n    var searchTerm = $(\"#search-text\").val();\n    var listItem = $('#list').children('li');\n  \n    \n    var searchSplit = searchTerm.replace(/ /g, \"'):containsi('\")\n    \n    $.extend($.expr[':'], {\n    'containsi': function(elem, i, match, array)\n      {\n        return (elem.textContent || elem.innerText || '').toLowerCase()\n          .indexOf((match[3] || \"\").toLowerCase()) >= 0;\n      }\n    });\n    \n    \n    $(\"#list li\").not(\":containsi('\" + searchSplit + \"')\").each(function(e)   {\n      $(this).addClass('hiding out').removeClass('in');\n      setTimeout(function() {\n          $('.out').addClass('hidden');\n        }, 300);\n    });\n    \n    $(\"#list li:containsi('\" + searchSplit + \"')\").each(function(e) {\n      $(this).removeClass('hidden out').addClass('in');\n      setTimeout(function() {\n          $('.in').removeClass('hiding');\n        }, 1);\n    });\n    \n  \n      var jobCount = $('#list .in').length;\n    $('.list-count').text(jobCount + ' items');\n    \n    if(jobCount == '0') {\n      $('#list').addClass('empty');\n    }\n    else {\n      $('#list').removeClass('empty');\n    }\n    \n  });\n    \n});",
    "output": "str",
    "x": 590,
    "y": 40,
    "wires": [
      [
        "cb4b61e3.0dc83"
      ]
    ]
  },
  {
    "id": "cb4b61e3.0dc83",
    "type": "template",
    "z": "175c22d2.0ef64d",
    "name": "css",
    "field": "payload.style",
    "fieldType": "msg",
    "format": "css",
    "syntax": "plain",
    "template": ".list-wrap label {\n  float:left;\n  color:#00BDE8;\n}\n\n.list-count {\n  float:left;\n  text-align:center;\n  width:30%;\n  padding:0.5em;\n  color:#ddd;\n}\n\nli {\n  transition-property: margin, background-color, border-color;\n  transition-duration: .4s, .2s, .2s;\n  transition-timing-function: ease-in-out, ease, ease;\n}\n\n.empty-item {\n  transition-property: opacity;\n  transition-duration: 0s;\n  transition-delay: 0s;\n  transition-timing-function: ease;\n}\n\n.empty .empty-item {\n  transition-property: opacity;\n  transition-duration: .2s;\n  transition-delay: .3s;\n  transition-timing-function: ease;\n}\n\n.hiding {\n  margin-left:-100%;\n  opacity:0.5;\n}\n\n.hidden {\n  display:none;\n}\n\nul {\n  float:left;\n  width:100%;\n  margin:2em 0;\n  padding:0;\n  position:relative;\n}\n\nul:before {\n  content:'desserts';\n  position:absolute;\n  left:-2.8em;\n  font-size:3em;\n  text-align:right;\n  top:1.5em;\n  color:#ededed;\n  font-weight:bold;\n  transform:rotate(-90deg);\n}\n\nli {\n  float:left;\n  clear:left;\n  width:100%;\n  margin:0.2em 0;\n  padding:0.5em 0.8em;\n  list-style:none;\n  background-color:#f2f2f2;\n  border-left:5px solid #003842;\n  cursor:pointer;\n  color:#333;\n  position:relative;\n  z-index:2;\n}\n\nli:hover {\n  background-color:#f9f9f9;\n  border-color:#00BDE8;\n}\n\n.empty-item {\n  background:#fff;\n  color:#ddd;\n  margin:0.2em 0;\n  padding:0.5em 0.8em;\n  font-style:italic;\n  border:none;\n  text-align:center;\n  visibility:hidden;\n  opacity:0;\n  float:left;\n  clear:left;\n  width:100%;\n}\n\n.empty .empty-item {\n  opacity:1;\n  visibility:visible;\n}",
    "output": "str",
    "x": 590,
    "y": 80,
    "wires": [
      [
        "280cbaf6.d65e7e"
      ]
    ]
  },
  {
    "id": "280cbaf6.d65e7e",
    "type": "template",
    "z": "175c22d2.0ef64d",
    "name": "html",
    "field": "payload",
    "fieldType": "msg",
    "format": "html",
    "syntax": "mustache",
    "template": "<html>\n  <head>\n    <title>Supermarket Manager</title>\n    <meta name=\"viewport\" content=\"initial-scale=1.0, user-scalable=no\">\n    <meta charset=\"utf-8\">\n    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.0/jquery.min.js\"></script>\n    <style>{{{payload.style}}}</style>\n  </head>\n <body> \n    <h1>Supermarket Manager</h1>\n\n<div>\n  <form method=\"post\" action=\"/{{url}}\" ajax=\"true\">\n    <input type=\"text\" name=\"id\" placeholder=\"Product ID\">\n    <input type=\"number\" name=\"price\" placeholder=\"Price\" step=\"0.01\">\n    <input type=\"submit\" value=\"Submit\">\n  </form>\n</div>\n<div class=\"output-div\">\n    <span class=\"feedback-output\" id=\"result\"></span>\n</div>\n<br>\n<input type=\"text\" id=\"search-text\" placeholder=\"search\" class=\"search-box\">\n<br>\n<ul id=\"list\">\n    {{#products}}\n    <li class=\"in\">\n        Id: {{index}}, \n        Title: {{title}}, \n        Original Price: {{price.original}}{{price.currency}}, \n        Discount Price: {{price.discount}}{{price.currency}}\n    </li>\n    {{/products}}\n</ul>\n\n</body>\n</html>\n<script>{{{payload.script}}}</script>",
    "output": "str",
    "x": 590,
    "y": 120,
    "wires": [
      [
        "c4a8c423.4be0b8"
      ]
    ]
  },
  {
    "id": "94c4dfd0.1ae0d",
    "type": "json",
    "z": "175c22d2.0ef64d",
    "name": "",
    "pretty": false,
    "x": 290,
    "y": 300,
    "wires": [
      [
        "64e9973c.4d7fc"
      ]
    ]
  },
  {
    "id": "64e9973c.4d7fc",
    "type": "function",
    "z": "175c22d2.0ef64d",
    "name": "Render Output",
    "func": "msg.payload = 'Data correcly transmitted: '+msg.payload;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 460,
    "y": 300,
    "wires": [
      [
        "7c89b293.a65094"
      ]
    ]
  },
  {
    "id": "db3c6bc2.2d6bd8",
    "type": "http in",
    "z": "175c22d2.0ef64d",
    "name": "Form Response",
    "url": "/api/managesupermarket",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 120,
    "y": 300,
    "wires": [
      [
        "94c4dfd0.1ae0d"
      ]
    ]
  },
  {
    "id": "b445821a.a2f2b8",
    "type": "ui_template",
    "z": "186b7a65.42ec46",
    "group": "9d4a3a62.d7ce4",
    "name": "Carts Heatmap",
    "order": 0,
    "width": "10",
    "height": "12",
    "format": "<style>\n    #grid table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n    #grid .cell {\n        color: black;\n        width: 45px;\n        height: 45px;\n        text-align: center;\n        line-height: 40px;\n        padding: 2px;\n        box-sizing: border-box;\n        border: 1px dashed grey;\n        background: rgb(240,240,240);\n        margin: 0;\n    }\n    #grid .cell.shelf {\n        border: 1px solid rgb(40,40,180);\n        background: rgb(40,40,180);\n        color: white;\n        font-weight: bold;\n    }\n    #grid .cell.totem {\n        background: white;\n        color: grey;\n        font-weight: bold;\n    }\n    #grid .cell.alone {\n        background: rgb(10,245,10);\n    }\n    #grid .cell.half {\n        background: rgb(245,245,10);\n    }\n    #grid .cell.full {\n        background: rgb(245,10,10);\n    }\n</style>\n<div id=\"grid\">\n    <table>\n        <tr ng-repeat=\"row in msg.grid.grid track by $index\">\n            <td ng-repeat=\"cell in row track by $index\">\n                <div class=\"cell\" ng-class=\"{\n                    shelf: !Number.isInteger(cell) && cell.charAt(0) == 'S',\n                    totem: !Number.isInteger(cell) && cell.charAt(0) == 'T',\n                    alone: cell==1,\n                    half:  cell>1 && cell<4,\n                    full:  cell>=4\n                    }\">{{cell}}</div>\n            </td>\n        </tr>\n    </table>\n</div>",
    "storeOutMessages": true,
    "fwdInMessages": true,
    "templateScope": "local",
    "x": 590,
    "y": 230,
    "wires": [
      []
    ]
  },
  {
    "id": "9bc608e1.70a3",
    "type": "inject",
    "z": "186b7a65.42ec46",
    "name": "Check carts frequence",
    "topic": "",
    "payload": "true",
    "payloadType": "bool",
    "repeat": "1",
    "crontab": "",
    "once": false,
    "x": 160,
    "y": 140,
    "wires": [
      [
        "a3c80e19.fd71b",
        "5de0cf3e.460e68",
        "8e7c8787.c057b",
        "b4f004d7.6de878"
      ]
    ]
  },
  {
    "id": "a3c80e19.fd71b",
    "type": "function",
    "z": "186b7a65.42ec46",
    "name": "generate get cart position request",
    "func": "var index = context.get(\"deviceIndex\")||0;\nindex = (index+1) % 20;\ncontext.set(\"deviceIndex\", index);\n\nmsg = {};\nmsg.device = \"cart\";\nmsg.deviceId = `Cart_${index}`;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 610,
    "y": 140,
    "wires": [
      [
        "646e5f7c.294ad"
      ]
    ]
  },
  {
    "id": "646e5f7c.294ad",
    "type": "subflow:9764201b.6e44f8",
    "z": "186b7a65.42ec46",
    "name": "",
    "x": 870,
    "y": 140,
    "wires": [
      [
        "d18c7dab.f45df8"
      ]
    ]
  },
  {
    "id": "d8a8d332.30672",
    "type": "function",
    "z": "186b7a65.42ec46",
    "name": "update supermarket grid",
    "func": "/* \n * Workaround for class definition in node-red:\n * define the class inside a function with strict mode\n */\nfunction makeGrid(mongoGrid) {\n    \"use strict\";\n    class Grid {\n        constructor(mongoGrid) {\n            this.grid = [];\n            this.width = mongoGrid.width;\n            this.height = mongoGrid.height;\n            this.carts = {};\n            for (var y = 0; y < this.height; y++) {\n                this.grid[y] = [];\n                for (var x = 0; x < this.width; x++) {\n                    var cell = mongoGrid.grid[y][x];\n                    this.grid[y][x] = cell === \"\" ? 0 : cell;\n                }\n            }\n        }\n    \n        move(cartId, x, y) {\n            if (x < 0 || x >= this.width) {\n                throw new Error(`out of grid x ${x}`);\n            }\n            if (y < 0 || y >= this.height) {\n                throw new Error(`out of grid y ${y}`);\n            }\n            if (!Number.isInteger(this.grid[y][x])) {\n                throw new Error(`invalid position ${x},${y}`);\n            }\n            \n            var oldPosition = this.carts[cartId];\n            if (typeof oldPosition !== \"undefined\") {\n                this.grid[oldPosition.y][oldPosition.x] -= 1;\n            }\n            this.grid[y][x] += 1;\n            this.carts[cartId] = {x: x, y: y};\n        }\n    \n        remove(cartId) {\n            var oldPosition = this.carts[cartId];\n            if (typeof oldPosition !== \"undefined\") {\n                this.grid[oldPosition.y][oldPosition.x] -= 1;\n            }\n            this.carts[cartId] = undefined;\n        }\n    }\n    \n    return new Grid(mongoGrid);\n}\n\nvar grid = context.get(\"grid\");\nif (grid === null || grid === undefined) {\n    grid = makeGrid(msg.payload);\n}\n\n\nmsg.value = JSON.parse(msg.value);\ngrid.move(msg.deviceId, Math.floor(msg.value.x), Math.floor(msg.value.y));\ncontext.set(\"grid\", grid);\n\nmsg = {};\nmsg.grid = grid;\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 380,
    "y": 230,
    "wires": [
      [
        "b445821a.a2f2b8"
      ]
    ]
  },
  {
    "id": "5de0cf3e.460e68",
    "type": "delay",
    "z": "186b7a65.42ec46",
    "name": "",
    "pauseType": "delay",
    "timeout": "500",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 370,
    "y": 120,
    "wires": [
      [
        "a3c80e19.fd71b"
      ]
    ]
  },
  {
    "id": "8e7c8787.c057b",
    "type": "delay",
    "z": "186b7a65.42ec46",
    "name": "",
    "pauseType": "delay",
    "timeout": "250",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 370,
    "y": 160,
    "wires": [
      [
        "a3c80e19.fd71b"
      ]
    ]
  },
  {
    "id": "b4f004d7.6de878",
    "type": "delay",
    "z": "186b7a65.42ec46",
    "name": "",
    "pauseType": "delay",
    "timeout": "750",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 370,
    "y": 90,
    "wires": [
      [
        "a3c80e19.fd71b"
      ]
    ]
  },
  {
    "id": "785c63fb.1db7a4",
    "type": "comment",
    "z": "186b7a65.42ec46",
    "name": "Carts heatmap",
    "info": "",
    "x": 110,
    "y": 40,
    "wires": []
  },
  {
    "id": "4831a210.b19a4c",
    "type": "inject",
    "z": "186b7a65.42ec46",
    "name": "Check carts frequence",
    "topic": "",
    "payload": "true",
    "payloadType": "bool",
    "repeat": "1",
    "crontab": "",
    "once": false,
    "x": 160,
    "y": 400,
    "wires": [
      [
        "874cdf2a.86cd88",
        "328f2137.cb1236",
        "35507ab3.6e5bc6",
        "3cb6c56e.3d9112"
      ]
    ]
  },
  {
    "id": "c60fe722.612468",
    "type": "function",
    "z": "186b7a65.42ec46",
    "name": "generate random cart positions",
    "func": "var index = context.get(\"deviceIndex\")||0;\nindex = (index+1) % 20;\ncontext.set(\"deviceIndex\", index);\n\nvar width = msg.payload.width;\nvar height = msg.payload.height;\nvar grid = msg.payload.grid;\n\nvar x = Math.floor(Math.random() * width);\nvar y = Math.floor(Math.random() * height);\n    \nif (grid[y][x] === \"\") {\n    msg = {};\n    msg.device = \"cart\";\n    msg.deviceId = `Cart_${index}`;\n    msg.value = `${x},${y}`;\n    return msg;\n}",
    "outputs": 1,
    "noerr": 0,
    "x": 820,
    "y": 400,
    "wires": [
      [
        "55135180.94af78"
      ]
    ]
  },
  {
    "id": "874cdf2a.86cd88",
    "type": "delay",
    "z": "186b7a65.42ec46",
    "name": "",
    "pauseType": "delay",
    "timeout": "500",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 370,
    "y": 380,
    "wires": [
      [
        "3cb6c56e.3d9112"
      ]
    ]
  },
  {
    "id": "328f2137.cb1236",
    "type": "delay",
    "z": "186b7a65.42ec46",
    "name": "",
    "pauseType": "delay",
    "timeout": "250",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 370,
    "y": 420,
    "wires": [
      [
        "3cb6c56e.3d9112"
      ]
    ]
  },
  {
    "id": "35507ab3.6e5bc6",
    "type": "delay",
    "z": "186b7a65.42ec46",
    "name": "",
    "pauseType": "delay",
    "timeout": "750",
    "timeoutUnits": "milliseconds",
    "rate": "1",
    "nbRateUnits": "1",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": false,
    "x": 370,
    "y": 350,
    "wires": [
      [
        "3cb6c56e.3d9112"
      ]
    ]
  },
  {
    "id": "55135180.94af78",
    "type": "subflow:75994a9b.4846ac",
    "z": "186b7a65.42ec46",
    "x": 850,
    "y": 440,
    "wires": [
      []
    ]
  },
  {
    "id": "36f1a4d5.84703c",
    "type": "mongodb2 in",
    "z": "821fa547.1b5ce8",
    "service": "_ext_",
    "configNode": "d8a581dc.b0cfa8",
    "name": "Shelves products collection",
    "collection": "map",
    "operation": "",
    "x": 480,
    "y": 70,
    "wires": [
      []
    ]
  },
  {
    "id": "92218ff1.234658",
    "type": "function",
    "z": "821fa547.1b5ce8",
    "name": "find product availability",
    "func": "msg.operation = \"findOne\"\nmsg.payload = [\n    {}, {}\n]\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 230,
    "y": 70,
    "wires": [
      [
        "36f1a4d5.84703c"
      ]
    ]
  },
  {
    "id": "3cb6c56e.3d9112",
    "type": "subflow:821fa547.1b5ce8",
    "z": "186b7a65.42ec46",
    "x": 570,
    "y": 400,
    "wires": [
      [
        "c60fe722.612468"
      ]
    ]
  },
  {
    "id": "d18c7dab.f45df8",
    "type": "subflow:821fa547.1b5ce8",
    "z": "186b7a65.42ec46",
    "x": 150,
    "y": 230,
    "wires": [
      [
        "d8a8d332.30672"
      ]
    ]
  },
  {
    "id": "97983c7e.ee6eb8",
    "type": "mongodb2 in",
    "z": "ca9d5af1.bc0ea8",
    "service": "_ext_",
    "configNode": "d8a581dc.b0cfa8",
    "name": "Shelves products collection",
    "collection": "products",
    "operation": "",
    "x": 460,
    "y": 60,
    "wires": [
      []
    ]
  },
  {
    "id": "36cb8568.df137a",
    "type": "function",
    "z": "ca9d5af1.bc0ea8",
    "name": "find all product",
    "func": "msg.operation = \"find.toArray\"\nmsg.payload = [{}, {_id:false}];\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 220,
    "y": 60,
    "wires": [
      [
        "97983c7e.ee6eb8"
      ]
    ]
  },
  {
    "id": "73a34e6c.d68dd",
    "type": "subflow:ca9d5af1.bc0ea8",
    "z": "175c22d2.0ef64d",
    "name": "",
    "x": 260,
    "y": 40,
    "wires": [
      [
        "62cffaa8.98178c"
      ]
    ]
  }
]