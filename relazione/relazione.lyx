#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage[dvipsnames]{xcolor}
\usepackage{graphicx}
\usepackage[font=footnotesize,labelfont=bf]{caption}
\hypersetup{
    allcolors = {Black},
    urlcolor = {RoyalBlue},
    linkcolor = {Sepia},
    menucolor = {Sepia}
}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
multicol
\end_modules
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "newcent" "Adobe Garamond Pro"
\font_sans "default" "default"
\font_typewriter "cmtt" "Source Code Pro"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 90
\use_microtype true
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing other 1.15
\use_hyperref true
\pdf_title "Smart Super Market"
\pdf_author "Bossi Tommaso, Landro Nicola"
\pdf_subject "Progetto per il corso di Sistemi di Telecomunicazione Innovativi"
\pdf_keywords "Sistemi di Telecomunicazione Innovativi, IoT, NFC, Market"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\ttfamily\small},keywordstyle={\color{BrickRed}\bfseries},stringstyle={\color{NavyBlue}},commentstyle={\color{OliveGreen}\itshape},morecomment={[s][\color{OliveGreen}]{/**}{*/}},numbers=left,numberstyle={\scriptsize\sffamily\color{Gray}},stepnumber=1,numbersep=8pt,tabsize=4,showspaces=false,showstringspaces=false,breaklines=true,frame=Single,xleftmargin=14pt"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
Smart Super Market
\end_layout

\begin_layout Author
Bossi Tommaso, Nicola Landro
\end_layout

\begin_layout Part
Scenario applicativo
\end_layout

\begin_layout Standard
Lo scenario trattato da questo progetto consiste nella gestione e nel monitoragg
io si un supermercato.
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
lines 23
placement O
overhang 0in
width "50text%"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/UseCase.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Use case diagram.
 Vengono indicate le azioni che possono svolgere i clienti del supermercato
 e le azioni svolte dall'applicazione di controllo.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Gli scaffali sono dotati di lettori per rilevare la presenza dei prodotti
 (ciascuno dotato di un tag RFID), identificando quando uno specifico prodotto
 viene prelevato o riposto.
 In aggiunta, il banco frigo presenta un sensore di temperatura con relativo
 termostato per riportare la temperatura.
\end_layout

\begin_layout Standard
Anche i carrelli hanno dei sensori per rilevare la presenza dei prodotti
 scelti.
 Ciascun carrello presenta un'interfaccia che mostra la lista dei prodotti
 prelevati con la spesa totale e permette di effettuare il pagamento tramite
 NFC.
 Inoltre, i carrelli sono localizzati in modo da mostrare ai gestori la
 distribuzione delle persone all'interno del supermercato.
\end_layout

\begin_layout Standard
Agli ingressi/uscite sono presenti dei totem antitaccheggio che rilevano
 prodotti non pagati e dotati di un allarme.
\end_layout

\begin_layout Standard
È presente un interfaccia per gli addetti marketing del supermercato grazie
 alla quale sono in grado di abbassare o alzare i prezzi dei prodotti.
\end_layout

\begin_layout Section
Entità coinvolte
\begin_inset CommandInset label
LatexCommand label
name "sec:Entità-coinvolte"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="9">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<column alignment="center" valignment="top" width="1cm">
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S2
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S1
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S3
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S3
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S4
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S4
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
T1
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
S5
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Schema-del-supermercato"

\end_inset

Schema del supermercato
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Prendendo come riferimento la figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Schema-del-supermercato"
plural "false"
caps "false"
noprefix "false"

\end_inset

, il supermercato è composto da cinque scaffali (S1, ..., S5) e da due totem
 antitaccheggio (T1, T2).
\end_layout

\begin_layout Standard
Gli scaffali sono dotati di due sensori:
\end_layout

\begin_layout Itemize
un rilevatore di prodotti prelevati dallo scaffale (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Sx_Add
\end_layout

\end_inset

 dove x è il numero dello scaffale); il sensore è analogico e il valore
 fornito corrisponde all'id del prodotto rilevato.
\end_layout

\begin_layout Itemize
un rilevatore di prodotti riposti sullo scaffale (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Sx_Rem
\end_layout

\end_inset

 dove x è il numero dello scaffale); il sensore è analogico e il valore
 fornito corrisponde all'id del prodotto rilevato.
\end_layout

\begin_layout Standard
Inoltre, S1 viene considerato come banco frigo, ed è per questa ragione
 dotato di un ulteriore sensore analogico per la temperatura (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
S1_Temp
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
I totem sono dotati di due sensori:
\end_layout

\begin_layout Itemize
un rilevatore di prodotti (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Tx_Detector
\end_layout

\end_inset

 dove x è il numero del totem); il sensore è analogico e il valore fornito
 corrisponde all'id del prodotto rilevato.
\end_layout

\begin_layout Itemize
un allarme (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Tx_Alarm
\end_layout

\end_inset

 dove x è il numero del totem); il sensore è digitale e il valore indica
 se il segnale di allarme è attivo o disattivo.
\end_layout

\begin_layout Standard
Il supermercato ha a disposizione venti carrelli (Cart_0, ..., Cart_19), ciascuno
 dotato di quattro sensori:
\end_layout

\begin_layout Itemize
un rilevatore di prodotti aggiunti al carrello (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Cart_x_Add
\end_layout

\end_inset

 dove x è il numero del carrello); il sensore è analogico e il valore fornito
 corrisponde all'id del prodotto rilevato.
\end_layout

\begin_layout Itemize
un rilevatore di prodotti rimossi dal carrello (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Cart_x_Rem
\end_layout

\end_inset

 dove x è il numero del carrello); il sensore è analogico e il valore fornito
 corrisponde all'id del prodotto rilevato.
\end_layout

\begin_layout Itemize
un sensore di posizione (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Cart_x
\end_layout

\end_inset

 dove x è il numero del carrello); il valore fornito indica la posizione
 del carrello all'interno del supermercato ed è espresso come coppia di
 coordinate x, y.
\end_layout

\begin_layout Itemize
un lettore NFC (id: 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
Cart_x_NFC
\end_layout

\end_inset

 dove x è il numero del carrello) utilizzato per effettuare il pagamento
 dei prodotti presenti nel carrello.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/Class Diagram.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class diagram.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Protocolli di comunicazione
\begin_inset CommandInset label
LatexCommand label
name "sec:Protocolli-di-comunicazione"

\end_inset


\end_layout

\begin_layout Subsection
Sensori simulati
\begin_inset CommandInset label
LatexCommand label
name "subsec:Sensori-simulati"

\end_inset


\end_layout

\begin_layout Standard
Tutti i sensori illustrati nella sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Entità-coinvolte"
plural "false"
caps "false"
noprefix "false"

\end_inset

 sono simulati tramite dei server TCP.
 Nello specifico si tratta di tre server che simulano:
\end_layout

\begin_layout Enumerate
gli scaffali (in ascolto sulla porta 9090);
\end_layout

\begin_layout Enumerate
i carrelli (in ascolto sulla porta 9091);
\end_layout

\begin_layout Enumerate
i totem (in ascolto sulla porta 9092).
\end_layout

\begin_layout Standard
Un'interfaccia che mostra il valore corrente di ciascun sensore è disponibile
 tramite un server HTTP attivo sulla porta 3000.
\end_layout

\begin_layout Standard
Il protocollo di comunicazione adottato dai tre server è il medesimo.
 Tale protocollo è composto da due possibili messaggi:
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
SET <id> <value>
\end_layout

\end_inset

 per impostare il nuovo valore del sensore; 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<id>
\end_layout

\end_inset

 è l'id del sensore e 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<value>
\end_layout

\end_inset

 è il nuovo valore da assegnare.
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
GET <id>
\end_layout

\end_inset

 per ottenere il valore corrente del sensore; 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<id>
\end_layout

\end_inset

 è l'id del sensore.
\end_layout

\begin_layout Standard
Il server risponde a tali messaggi con il messaggio 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
OK <id> <value>
\end_layout

\end_inset

 dove 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<id>
\end_layout

\end_inset

 è l'id del sensore mentre 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<value>
\end_layout

\end_inset

 è il nuovo valore appena assegnato oppure il valore richiesto.
\end_layout

\begin_layout Standard
Nel caso il comando inviato non sia corretto il server risponde con il messaggio
 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
ERROR <code> <msg>
\end_layout

\end_inset

 dove 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<code>
\end_layout

\end_inset

 è un codice associato al tipo di errore mentre 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<msg>
\end_layout

\end_inset

 è un messaggio esplicativo.
\end_layout

\begin_layout Standard
A seconda del tipo di dispositivo, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<value>
\end_layout

\end_inset

 può assumere valori differenti:
\end_layout

\begin_layout Itemize
un dispositivo digitale ammette valori 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
true
\end_layout

\end_inset

 oppure 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
false
\end_layout

\end_inset

;
\end_layout

\begin_layout Itemize
un dispositivo analogico ammette un numero floating point;
\end_layout

\begin_layout Itemize
un dispositivo di posizione ammette valori nella forma 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<x>,<y>
\end_layout

\end_inset

 dove sia 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<x>
\end_layout

\end_inset

 sia 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<y>
\end_layout

\end_inset

 sono due numeri floating point.
\end_layout

\begin_layout Subsection
Gestione pagamenti
\begin_inset CommandInset label
LatexCommand label
name "subsec:Gestione-pagamenti"

\end_inset


\end_layout

\begin_layout Standard
Al fine di simulare il pagamento tramite NFC, è stato implementato un server
 a cui connettersi per effettuare la transazione.
 Tale server comunica in TCP utilizzando messaggi in formato JSON.
\end_layout

\begin_layout Standard
Il server accetta messaggi nella forma 
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	request : 
\begin_inset Quotes eld
\end_inset

payment
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout Plain Layout

	sender : <senderId>,
\end_layout

\begin_layout Plain Layout

	payment : <encryptedPayment>
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset

 dove 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<senderId>
\end_layout

\end_inset

 è l'id di un account registrato sul server, mentre 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<encryptedPayment>
\end_layout

\end_inset

 è un campo cifrato (con la chiave associata all'account indicato) che contiene
 le informazioni sulla transazione da effettuare.
 Il campo payment decifrato è nella forma 
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	from : <fromId>,
\end_layout

\begin_layout Plain Layout

	to : <toId>,
\end_layout

\begin_layout Plain Layout

	amount : <amount>,
\end_layout

\begin_layout Plain Layout

	timestamp : <timestamp>
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset

 dove 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<fromId>
\end_layout

\end_inset

 e 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<toId>
\end_layout

\end_inset

 sono rispettivamente l'id dell'account pagante e pagato, 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<amount>
\end_layout

\end_inset

 è la somma pagata e 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<timestamp>
\end_layout

\end_inset

 è la data di pagamento.
\end_layout

\begin_layout Standard
Il server risponde con il messaggio 
\begin_inset listings
lstparams "language=Java"
inline false
status open

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	payment : <encryptedPayment>
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
dove 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
<encryptedPayment>
\end_layout

\end_inset

 è lo stesso campo cifrato illustrato in precedenza, a cui è stato aggiunto
 un campo 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
result
\end_layout

\end_inset

 che indica se l'operazione è andata a buon fine.
\end_layout

\begin_layout Standard
Allo scopo di semplificare la simulazione, il server ha un comportamento
 deterministico: se l'id del pagante è un numero pari il pagamento va a
 buon fine altrimenti fallisce.
\end_layout

\begin_layout Subsection
MQTT
\begin_inset CommandInset label
LatexCommand label
name "subsec:MQTT"

\end_inset


\end_layout

\begin_layout Standard
Sono stati definiti alcuni topic MQTT:
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
supermarket/alert/<Tx>
\end_layout

\end_inset

: avvisi sui furti rilevati dal totem Tx (dove x è il numero del totem).
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
supermarket/shelf/S1/temperature
\end_layout

\end_inset

: informazioni sulla temperatura rilevata nel banco frigo S1.
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
supermarket/product/<Pid>/price
\end_layout

\end_inset

: notifiche sulla variazione di prezzo del prodotto Pid.
\end_layout

\begin_layout Enumerate
\begin_inset Flex Code
status open

\begin_layout Plain Layout
supermarket/product/<Pid>/availability/<Sx>
\end_layout

\end_inset

: notifiche sulla variazione di disponibilità del prodotto Pid (dove Pid
 indica l'id del prodotto) nello scaffale Sx (dove x è il numero dello scaffale).
\end_layout

\begin_layout Part
Flussi realizzati
\end_layout

\begin_layout Section
Scaffali
\end_layout

\begin_layout Subsection
Controllo della temperatura
\end_layout

\begin_layout Standard
Il flusso per il controllo della temperatura si occupa di mantenere la temperatu
ra del banco frigo S1 stabile sui 2°C.
 I cambiamenti di temperatura vengono indicati nel grafico presente nella
 dashboard e pubblicati sul topic 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
supermarket/shelf/S1/temperature
\end_layout

\end_inset

 (vedi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:MQTT"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramChangeTemperature.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente alla gestione della temperatura.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aggiunta e rimozione dei prodotti
\end_layout

\begin_layout Standard
Il flusso che controlla l'aggiunta e la rimozione di prodotti dagli scaffali
 si occupa di aggiornare la disponibilità dei prodotti sul database e di
 pubblicare la nuova quantità disponibile sul topic 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
supermarket/pro duct/<Pid>/availability/<Sx>
\end_layout

\end_inset

 (vedi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:MQTT"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramShelvesManagement.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente all'aggiunta e rimozione dei prodotti dagli scaffali.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Totem
\end_layout

\begin_layout Subsection
Rilevazione prodotti rubati
\end_layout

\begin_layout Standard
Quando un prodotto non pagato viene rilevato dai totem antitaccheggio viene
 azionato un allarme per 5 secondi e viene pubblicata l'informazione sul
 topic 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
supermarket/alert/<Tx>
\end_layout

\end_inset

 (vedi sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:MQTT"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramTheftProtection.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente alla gestione dei tentativi di furto.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Carrelli
\end_layout

\begin_layout Subsection
Spostamenti casuali dei carrelli
\end_layout

\begin_layout Standard
Questo flusso di supporto serve a rendere più evidente il funzionamento
 della mappa con i carrelli.
 Questo flusso si occupa di spostare casualmente i carrelli all'interno
 del supermercato.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramUpdateCartPosition.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente allo spostamento casuale dei carrelli.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Creazione mappa con la posizione dei carrelli
\end_layout

\begin_layout Standard
Questo flusso si occupa di richiedere la posizione dei carrelli e la disposizion
e degli scaffali per poter generare e mantenere aggiornata la mappa dei
 carrelli e la heatmap che mostra le zone più frequentate del supermercato.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramUpdateCartsCharts.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente alla generazione della mappa dei carrelli.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Aggiunta e rimozione dei prodotti
\end_layout

\begin_layout Standard
Il flusso che controlla l'aggiunta e la rimozione di prodotti dai carrelli
 si occupa di aggiornare la lista dei prodotti prelevati sul database e
 di aggiornare lo schermo del carrello che mostra tale lista.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramAddOrRemoveProductFromCart
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente all'aggiunta e rimozione dei prodotti dai carrelli.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Gestione dello schermo con la lista prodotti
\end_layout

\begin_layout Standard
Ogni carrello è dotato di uno schermo che mostra la lista dei prodotti inseriti
 con i relativi prezzi.
 Ogni volta che viene aggiunto un prodotto al carrello (o rimosso) le informazio
ni sullo schermo vengono aggiornate.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramCartScreen.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente alla gestione dello schermo del carrello.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Gestione del pagamento
\end_layout

\begin_layout Standard
Per poter effettuare un pagamento è necessario aver inserito almeno un prodotto
 nel carrello.
 Selezionando il bottone di pagamento sull'interfaccia del carrello, viene
 attivato il lettore NFC per poter effettuare la transazione.
 La transazione viene mandata al server di pagamento quindi il risultato
 dell'operazione viene mostrato a video.
\end_layout

\begin_layout Standard
I messaggi con il server sono cifrati con AES.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramPay.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente alla gestione del pagamento tramite NFC dal carrello.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Gestione prodotti
\end_layout

\begin_layout Subsection
Form per l'aggiornamento dei prezzi
\end_layout

\begin_layout Standard
La form per aggiornare i prezzi è una semplice interfaccia grafica pensata
 per consentire al gruppo marketing del supermercato di aggiornare i prezzi
 dei prodotti.
 È possibile cercare nel listino i prodotti e poi inserendo id prodotto
 e prezzo si potrà aggiornare con successo.
 Questo scatena un messaggio MQTT a tutti i sottoscritti e anche una chiamata
 al server del 
\emph on
Smarketbot
\emph default
 firmata, che causa un brodcast a tutti gli iscritti al bot che hanno in
 precedenza scritto 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
/subscribe
\end_layout

\end_inset

, come spiegato nella sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Smarketbot"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename diagram/SequenceDiagramUpdatePrice.png
	display false
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequence diagram inerente all'aggiornamento dei prezzi.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Subflows
\end_layout

\begin_layout Standard
Per rendere più facili e comprensibili i flow e per mettere a fattor comune
 parti di flow utilizzati in più punti, abbiamo creato alcuni subflow.
 
\end_layout

\begin_layout Subsection
TCP Set e Get
\end_layout

\begin_layout Standard
Sono due flussi utilizzati per cambiare o ottenere i valori dei vari sensori.
 In questi flussi è racchiusa la logica per decidere quale delle tre connesioni
 TCP utilizzare e per comporre la richiesta.
 In caso si verifichi un errore, questo viene stampato nei log di debug.
\end_layout

\begin_layout Subsection
TCP fake payment
\end_layout

\begin_layout Standard
Questo flusso è in grado di simulare il meccanismo di pagamento criptando
 i dati e inviandoli al server per poi decriptare la risposta e gestirla
 per informare l'utilizzatore del risultato della transazione.
 Per i dettagli del protocollo vedi la sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Gestione-pagamenti"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Query Mongo
\end_layout

\begin_layout Standard
Sono stati realizzati vari subflow che utilizzano MongoDB ed eseguono le
 seguenti azioni: ottenere la lista di tutti i prodotti del supermercato
 o dei carrelli, ottenere la mappa del supermarket; aggiornare la disponibilità
 dei prodotti o il loro prezzo e cambiare i prodotti presenti in un carrello.
\end_layout

\begin_layout Subsection
Every 250 ms
\end_layout

\begin_layout Standard
Questo è un piccolo subflow di supporto che è stato utilizzato in più punti
 per velocizzare la simulazione.
 Ogni secondo genera un evento che viene mandato a vari nodi delay allo
 scopo di produrre quattro eventi distanziati di 250 millisecondi.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Part
Dettagli implementativi
\begin_inset CommandInset label
LatexCommand label
name "part:Dettagli-implementativi"

\end_inset


\end_layout

\begin_layout Standard
I vari server sono stati tutti implementati in node.js e sono attivi sulle
 porte:
\end_layout

\begin_layout Itemize
9090, 9091 e 9092 - i server TCP relativi ai sensori discussi nella sezione
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Sensori-simulati"
plural "false"
caps "false"
noprefix "false"

\end_inset

;
\end_layout

\begin_layout Itemize
3000 - il server HTTP che fornisce un'interfaccia per visualizzare i valori
 dei sensori;
\end_layout

\begin_layout Itemize
10000 - il server TCP che simula un sistema di pagamento.
\end_layout

\begin_layout Standard
La versione di node.js utilizzata è la 9.11.1.
 Per l'esecuzione del progetto si rimanda alla sezione 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Come-eseguire-il"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Section
Smarketbot
\begin_inset CommandInset label
LatexCommand label
name "sec:Smarketbot"

\end_inset


\end_layout

\begin_layout Standard
In aggiunta alle notifiche sull'aggiornamento dei prezzi tramite MQTT si
 è deciso di sviluppare Smarketbot, un semplice bot per Telegram
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "https://telegram.org/"
target "https://telegram.org/"
literal "false"

\end_inset

, è disponibile l'app per Android e iOS, l'applicazione per PC e anche una
 web app.
\end_layout

\end_inset

 in grado di notificare la medesima informazione a chiunque abbia l'applicazione
 installata.
\end_layout

\begin_layout Standard
Per utilizzare Smarketbot su Telegram bisogna accedere alla url 
\begin_inset CommandInset href
LatexCommand href
target "http://t.me/NicTomBot"
literal "false"

\end_inset

 dal proprio dispositivo con installato Telegram.
 Dal bot sono possibili due azioni:
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
/subscribe
\end_layout

\end_inset

 con la quale ci si sottoscrive per ottenere informazioni dal bot;
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status open

\begin_layout Plain Layout
/unsubscribe
\end_layout

\end_inset

 con la quale è possibile smettere di ricevere informazioni dal bot.
 Tutti gli altri messaggi inviati al bot saranno ignorati.
\end_layout

\begin_layout Standard
Il bot è stato sviluppato e installato a parte per poter garantire un server
 sempre attivo.
 Tale server è un Orange Pi PC 2
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.orangepi.org/orangepipc2/"
literal "false"

\end_inset


\end_layout

\end_inset

, con sistema operativo Armbian, questo è stato possibile grazie alla compatibil
ità di node.js con l'architettura ARM.
\end_layout

\begin_layout Standard
Anche il bot è sviluppato in node.js ed il codice sorgente è disponibile
 al link 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
sloppy
\end_layout

\end_inset


\begin_inset CommandInset href
LatexCommand href
target "https://github.com/nicolalandro/BrodcastChatbot.git"
literal "false"

\end_inset

.
 
\end_layout

\begin_layout Section
Dataset con prodotti reali
\begin_inset CommandInset label
LatexCommand label
name "sec:Dataset-con-prodotti"

\end_inset


\end_layout

\begin_layout Standard
Per avere dei prodotti che abbiano nomi, reparti e prezzi realistici si
 è deciso di prenderli da un supermercato reale.
\end_layout

\begin_layout Standard
È stato dunque usato Web Scraper
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://chrome.google.com/webstore/detail/web-scraper/jnhgnonknehpejjnehehllkliplmbmhn"
literal "false"

\end_inset


\end_layout

\end_inset

, uno web scraper gratuito disponibile come plugin per Chrome.
 Usando tale strumento è stato possibile ottenere i dati dal supermercato
 Il Gigante.
 La sitemap utilizzata è la seguente:
\end_layout

\begin_layout Standard
\begin_inset Flex Multiple Columns
status open

\begin_layout Plain Layout
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "resources/sitemap_il_gigante.json"
lstparams "language=Java"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Tale sitemap è in grado di estrarre i nomi e i prezzi dei prodotti presenti
 nella prima pagina di ogni reparto.
 Non c'è stato bisogno di aggiungere più pagine per reparto perché i prodotti
 superavano in numero il migliaio, quindi abbiamo ritenuto di avere abbastanza
 prodotti.
 
\end_layout

\begin_layout Standard
Successivamente con uno script python abbiamo trasformato il prodotto del
 web scraper in JSON (formato più consono all'utilizzo desiderato), aggiungendo
 un campo 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
discount
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 randomizzato tenendo conto del prezzo del prodotto nonché un campo 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Code
status open

\begin_layout Plain Layout
availability
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 anch'esso con valore casuale.
\end_layout

\begin_layout Section
Come eseguire il server
\begin_inset CommandInset label
LatexCommand label
name "sec:Come-eseguire-il"

\end_inset


\end_layout

\begin_layout Standard
Per eseguire il progetto è sufficiente lanciare lo script 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
start.sh
\end_layout

\end_inset

 presente nella cartella principale del progetto.
 Questo script fa partire i server e Node-RED, inserisce il dataset in MongoDB
 ed apre firefox con le pagine principali.
\end_layout

\begin_layout Standard
Per evitare incompatibilità con Node-RED (che utilizza una versione di node.js
 più vecchia), i server sono stati isolati in un container docker che espone
 solo le porte indicate in precedenza.
 Per questo, lo script, prima di far partire i server, si occupa di scaricare
 ed installare Docker se non è già presente sul sistema e di costruire il
 container.
 Questa modalità di esecuzione è stata testata sulla macchina virtuale con
 ubuntu utilizzata a lezione.
\end_layout

\begin_layout Standard
Se invece si desidera eseguire il progetto su un altro supporto è possibile
 provare ad eseguire lo script aggiungendo l'argomento 
\begin_inset Flex Code
status open

\begin_layout Plain Layout
--no-docker
\end_layout

\end_inset

.
 Perché tale modalità funzioni correttamente è necessario che sul sistema
 sia installata l'ultima versione di node.js.
\end_layout

\end_body
\end_document
